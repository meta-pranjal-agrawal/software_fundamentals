import java.util.Scanner;


public class NQueenProblem 
{
	static int N;
	static int N[][] board= new int[100][100];
	public int NQueen(int n,int [][]board)
	{
		if(n==0)
		{
			return 1;
		}
		
		for(int i=0;i<N;i++)
		{
			for(int j=0;j<N;j++)
			{
				if(!isattack(i,j,board) && board[i][j]!=1)
				{
					board[i][j]=1;
					
					if(NQueen(n-1,board)==1)
					{
						return 1;
					}
					
					board[i][j]=0;
					
					
				}
			}
		}
		
		
		return 0;
	}

	public boolean isattack(int row,int col,int [][]board)
	{
		for(int k=0;k<N;k++)
		{
			if(board[row][k]==1 || board[k][col]==1 )
				return true;
		}
		
		for(int k=0;k<N;k++)
		{
			for(int l=0;l<N;l++)
			{
				if((k+l)==(row+col) || (k-l)==(row-col))
					{
						if(board[k][l]==1)
						{
							return true;
						}
					}
			}
		}
		
		
		return true;
	}
	
	public static void main(String[] args) 
	{
		System.out.println("Enter the value of N");
		Scanner sc= new Scanner(System.in);
		N= sc.nextInt();
		
		for(int i=0;i<N;i++)
		{
			for(int j=0;j<N;j++)
			{
				board[i][j]=0;
			}
		}
		NQueenProblem nqueen= new NQueenProblem();
		nqueen.NQueen(N,board);
		
		for(int i=0;i<N;i++)
		{
			for(int j=0;j<N;j++)
			{
				System.out.print(board[i][j]);
			}
			System.out.println();
		}

	}

}
