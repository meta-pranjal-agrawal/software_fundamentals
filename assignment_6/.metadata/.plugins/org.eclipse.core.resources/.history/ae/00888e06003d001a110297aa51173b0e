
public final class IntSet 
{
	//final int []universalSet= new int[1000];
	//final int size=0;
	final int []set;
	
	public IntSet(int []set)
	{
		this.set=set;	
	}
	
	public  boolean isMember(int x)
	{
		for(int i=0; i<set.length; i++)
		{
			if(x == set[i])
			{
				System.out.println("it exists");
				return true;
			}
				
		}
		
		return false;
	}
	
	public int size()
	{
		return set.length;
	}
	
	public boolean isSubSet(IntSet subSet)
	{
		if(subSet.set.length >= set.length)
		{
			for(int i=0;i<1000;i++)
			{
				if(isMember(subSet.set[i])==false)
				{
					return false;
				}
			}
			return true;
			
		}
		
		return false;
	}
	
	public int []getCompliment()
	{	
		int []compliment= new int[100];
		
		int j=-1,k=0;
		for(int i=1;i<=100;i++)
		{
			j++;
			if(i<=set.length)
			{
				if(set[j]==i)
				{
					continue;
				}
			}
				compliment[k]=i;
				k++;
		}
		for(int i=0;i<compliment.length;i++){
			System.out.println(compliment[i]);
		}
		
		
		return compliment;
	}
	
	public int []union(int []set1,int []set2)
	{
		int []union = new int [1000];
		int biggerSetLength=0;
		int biggerSet=0;
		if(set1.length >= set2.length)
		{
			biggerSetLength=set1.length;
			biggerSet=1;
		}
		else
		{
			biggerSetLength=set2.length;
			biggerSet=2;
		}
		if(biggerSet==1)
		{
			for(int i=0; i<set1.length; i++)
			{
				for(int j=0; j<set2.length; j++)
				{
					int k=0;
					if(!(set2[j]==set1[i]))
					{
						union[k]=0;
					}
				}
			}
		}
		
		
		return union;
	}

	public static void main(String[] args)
	{
		IntSet intset= new IntSet(new int[]{1,2,3,4});
		//System.out.println(intset.isMember(6));
		int complement[]= intset.getCompliment();
		for(int i=0;i<4;i++)
		{
			System.out.println(complement[i]);
		}
		
		
		
	}

}
