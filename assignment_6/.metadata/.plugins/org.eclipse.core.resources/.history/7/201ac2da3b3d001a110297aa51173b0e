import static org.junit.Assert.assertEquals;  
import static org.junit.Assert.*;
import org.junit.Test;

public class IntSetTest 
{
	@Test
	public void isMemberTest1()
	{
		IntSet intSet= new IntSet(new int[]{1,2,3,4});
		boolean result= intSet.isMember(2);
		assertEquals(true,result);	
	}
	
	@Test
	public void isMemberTest2()
	{
		IntSet intSet= new IntSet(new int[]{});
		boolean result= intSet.isMember(2);
		assertEquals(false,result);	
	}
	
	@Test
	public void isMemberTest3()
	{
		IntSet intSet= new IntSet(new int[]{0});
		boolean result= intSet.isMember(0);
		assertEquals(true,result);	
	}
	
	
	@Test
	public void sizeTest1()
	{
		IntSet intSet= new IntSet(new int[]{1,2,3,4,5});
		int size= intSet.size();
		assertEquals(5,size);
	}
	
	@Test
	public void sizeTest2()
	{
		IntSet intSet= new IntSet(new int[]{});
		int size= intSet.size();
		assertEquals(0,size);
	}
	
	
	@Test
	public void isSubSetTest1()
	{
		IntSet intSet= new IntSet(new int[]{1,2,3,4});
		IntSet subSet= new IntSet(new int[]{2,3});
		boolean result= intSet.isSubSet(subSet);
		assertEquals(true,result);	
	}
	
	@Test
	public void isSubSetTest2()
	{
		IntSet intSet= new IntSet(new int[]{1,2,3,4});
		IntSet subSet= new IntSet(new int[]{});
		boolean result= intSet.isSubSet(subSet);
		assertEquals(true,result);	
	}
	
	@Test
	public void isSubSetTest3()
	{
		IntSet intSet= new IntSet(new int[]{1,2,3,4});
		IntSet subSet= new IntSet(new int[]{0});
		boolean result= intSet.isSubSet(subSet);
		assertEquals(false,result);	
	}
	
	@Test
	public void getComplementTest1()
	{
		IntSet intSet= new IntSet(new int[]{1,2,3,4});
		int j=0;
		int complement[]= new int[1000-intSet.size()];
		
		for(int i=5;i<=1000;i++)
		{
			complement[j]=i;
			j++;
		}
		IntSet complement1= new IntSet(complement);
		IntSet result= intSet.getComplement();
		assertArrayEquals(complement1.set,result.set);	 
	}
	
	@Test
	public void getComplementTest2()
	{
		IntSet intSet= new IntSet(new int[]{});
		int j=0;
		int complement[]= new int[1000-intSet.size()];
		
		for(int i=1;i<=1000;i++)
		{
			complement[j]=i;
			j++;
		}
		IntSet complement1= new IntSet(complement);
		IntSet result= intSet.getComplement();
		assertArrayEquals(complement1.set,result.set);	 
	}
	
	@Test
	public void unionTest1()
	{
		IntSet intSet1= new IntSet(new int[]{2,3,4,5});
		IntSet intSet2= new IntSet(new int[]{4,5,6,7,8});
		IntSet result=intSet1.union(intSet1, intSet2);
		IntSet union = new IntSet(new int[]{2,3,4,5,6,7,8});
		assertArrayEquals(union.set,result.set);
	}
	
	@Test
	public void unionTest2()
	{
		IntSet intSet1= new IntSet(new int[]{});
		IntSet intSet2= new IntSet(new int[]{4,5,6,7,8});
		IntSet result=intSet1.union(intSet1, intSet2);
		IntSet union = new IntSet(new int[]{4,5,6,7,8});
		assertArrayEquals(union.set,result.set);
	}
	
	

}
